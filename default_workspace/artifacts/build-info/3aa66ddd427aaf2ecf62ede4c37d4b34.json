{
	"id": "3aa66ddd427aaf2ecf62ede4c37d4b34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nstruct student{\r\n    uint roll;\r\n    \r\n}\r\n\r\ncontract structure {\r\n   \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct.sol\":71:99  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct.sol\":71:99  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122025223e4573f3a12f90f9b66a86fbfe241c79319ced643f305376517e159350ed64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122025223e4573f3a12f90f9b66a86fbfe241c79319ced643f305376517e159350ed64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x22 RETURNDATACOPY GASLIMIT PUSH20 0xF3A12F90F9B66A86FBFE241C79319CED643F3053 PUSH23 0x517E159350ED64736F6C63430008000033000000000000 ",
							"sourceMap": "71:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122025223e4573f3a12f90f9b66a86fbfe241c79319ced643f305376517e159350ed64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0x22 RETURNDATACOPY GASLIMIT PUSH20 0xF3A12F90F9B66A86FBFE241C79319CED643F3053 PUSH23 0x517E159350ED64736F6C63430008000033000000000000 ",
							"sourceMap": "71:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 71,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 99,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122025223e4573f3a12f90f9b66a86fbfe241c79319ced643f305376517e159350ed64736f6c63430008000033",
									".code": [
										{
											"begin": 71,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 99,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 99,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71,
											"end": 99,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct.sol\":{\"keccak256\":\"0x01d00262ff55c8b39c4607e932acbb64077f10fa9604dba17ec05494e7105389\",\"urls\":[\"bzz-raw://aa0d23d493f40169d509f4c18ac6c0a60f71126fba847182a2138df9f596dae7\",\"dweb:/ipfs/QmReJRV62ZeSwbi2PyjyawEw1FALwkNHv5kKtAUJffUd82\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct.sol": {
				"ast": {
					"absolutePath": "struct.sol",
					"exportedSymbols": {
						"structure": [
							5
						],
						"student": [
							4
						]
					},
					"id": 6,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"canonicalName": "student",
							"id": 4,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "roll",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "48:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "48:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "student",
							"nodeType": "StructDefinition",
							"scope": 6,
							"src": "27:40:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 6,
							"src": "71:28:0"
						}
					],
					"src": "0:101:0"
				},
				"id": 0
			}
		}
	}
}