{
	"id": "85fef1fa02741746d4a022d9992dc074",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n\r\n\r\ncontract structure {\r\n   \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct.sol\":31:59  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct.sol\":31:59  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f84ee710bed2a1dc3a129d19997e48190b4b8826a8433bb461112b1ce0fe3cb064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f84ee710bed2a1dc3a129d19997e48190b4b8826a8433bb461112b1ce0fe3cb064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x4E 0xE7 LT 0xBE 0xD2 LOG1 0xDC GASPRICE SLT SWAP14 NOT SWAP10 PUSH31 0x48190B4B8826A8433BB461112B1CE0FE3CB064736F6C634300080000330000 ",
							"sourceMap": "31:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f84ee710bed2a1dc3a129d19997e48190b4b8826a8433bb461112b1ce0fe3cb064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 0x4E 0xE7 LT 0xBE 0xD2 LOG1 0xDC GASPRICE SLT SWAP14 NOT SWAP10 PUSH31 0x48190B4B8826A8433BB461112B1CE0FE3CB064736F6C634300080000330000 ",
							"sourceMap": "31:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 31,
									"end": 59,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 31,
									"end": 59,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f84ee710bed2a1dc3a129d19997e48190b4b8826a8433bb461112b1ce0fe3cb064736f6c63430008000033",
									".code": [
										{
											"begin": 31,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 31,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31,
											"end": 59,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31,
											"end": 59,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 59,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 59,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct.sol\":{\"keccak256\":\"0x5465ed474f660d943c724a9b4cd7a0978f6f92682b6fb790f260903cf76f44f5\",\"urls\":[\"bzz-raw://b49615c4b4c7fed3a4be87a77755a0553e246966eec430299e9548f9c0a3c04f\",\"dweb:/ipfs/QmeQV3itV7hxTG7PDYyH9hTFSaoSnQaxiSE8FKsEubfkfb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct.sol": {
				"ast": {
					"absolutePath": "struct.sol",
					"exportedSymbols": {
						"structure": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "31:28:0"
						}
					],
					"src": "0:61:0"
				},
				"id": 0
			}
		}
	}
}