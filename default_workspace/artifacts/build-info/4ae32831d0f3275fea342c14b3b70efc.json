{
	"id": "4ae32831d0f3275fea342c14b3b70efc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract structure {\r\n   \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct.sol\":27:55  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct.sol\":27:55  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205a8437b59aad2b94d34a981eb4100621c3511ad812f4838d704adafde12b93c464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205a8437b59aad2b94d34a981eb4100621c3511ad812f4838d704adafde12b93c464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP5 CALLDATACOPY 0xB5 SWAP11 0xAD 0x2B SWAP5 0xD3 0x4A SWAP9 0x1E 0xB4 LT MOD 0x21 0xC3 MLOAD BYTE 0xD8 SLT DELEGATECALL DUP4 DUP14 PUSH17 0x4ADAFDE12B93C464736F6C634300080000 CALLER ",
							"sourceMap": "27:28:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205a8437b59aad2b94d34a981eb4100621c3511ad812f4838d704adafde12b93c464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS DUP5 CALLDATACOPY 0xB5 SWAP11 0xAD 0x2B SWAP5 0xD3 0x4A SWAP9 0x1E 0xB4 LT MOD 0x21 0xC3 MLOAD BYTE 0xD8 SLT DELEGATECALL DUP4 DUP14 PUSH17 0x4ADAFDE12B93C464736F6C634300080000 CALLER ",
							"sourceMap": "27:28:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 55,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 55,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a8437b59aad2b94d34a981eb4100621c3511ad812f4838d704adafde12b93c464736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 55,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 55,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 55,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 55,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 55,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 55,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct.sol\":{\"keccak256\":\"0x22743048a2fd6cfbce6608b52566f1bc55828608922eb764e75f61e8ec327321\",\"urls\":[\"bzz-raw://f8f82ddeac6dad93a23f48551725677f7fa668f551a184137d702120e349640f\",\"dweb:/ipfs/QmQz1hxaxtt694aZ8bTzrSyXfPB2Ge1PVtUZKwfMTUrTU2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct.sol": {
				"ast": {
					"absolutePath": "struct.sol",
					"exportedSymbols": {
						"structure": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:28:0"
						}
					],
					"src": "0:57:0"
				},
				"id": 0
			}
		}
	}
}