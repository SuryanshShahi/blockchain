{
	"id": "c738f1585287268f8e27e728f85ed937",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract bytesInDynamicArr {\r\n   \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct.sol": {
				"bytesInDynamicArr": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct.sol\":27:63  contract bytesInDynamicArr {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct.sol\":27:63  contract bytesInDynamicArr {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d9665fadce18fc69e521972e8a9e472ad50d1ca3b2bef1ec5996befed7295cf464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d9665fadce18fc69e521972e8a9e472ad50d1ca3b2bef1ec5996befed7295cf464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH7 0x5FADCE18FC69E5 0x21 SWAP8 0x2E DUP11 SWAP15 SELFBALANCE 0x2A 0xD5 0xD SHR LOG3 0xB2 0xBE CALL 0xEC MSIZE SWAP7 0xBE INVALID 0xD7 0x29 0x5C DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "27:36:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220d9665fadce18fc69e521972e8a9e472ad50d1ca3b2bef1ec5996befed7295cf464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 PUSH7 0x5FADCE18FC69E5 0x21 SWAP8 0x2E DUP11 SWAP15 SELFBALANCE 0x2A 0xD5 0xD SHR LOG3 0xB2 0xBE CALL 0xEC MSIZE SWAP7 0xBE INVALID 0xD7 0x29 0x5C DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "27:36:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 63,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9665fadce18fc69e521972e8a9e472ad50d1ca3b2bef1ec5996befed7295cf464736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 63,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 63,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 63,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct.sol\":\"bytesInDynamicArr\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct.sol\":{\"keccak256\":\"0xc198808ff5ad8630376838769ebeb77ec4ca2cfcdcb90ad463dc58a893894e32\",\"urls\":[\"bzz-raw://90695a09e7d584f09089b76c1c08ce3dbbe6e68c0d43d8410d41d3bbc733ba44\",\"dweb:/ipfs/QmNnJXFfE36BpbXhWqMDotQALppzeBErE2m2RBMVUoQevG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct.sol": {
				"ast": {
					"absolutePath": "struct.sol",
					"exportedSymbols": {
						"bytesInDynamicArr": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "bytesInDynamicArr",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:36:0"
						}
					],
					"src": "0:65:0"
				},
				"id": 0
			}
		}
	}
}