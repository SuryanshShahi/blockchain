{
	"id": "c9b86fddb7caf18e68c9fc6064d5f734",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"sendEther.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract structure {\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sendEther.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sendEther.sol\":27:56  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sendEther.sol\":27:56  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ff77fc9990d4ec3b4743911153e76b90b647d4b9797422dd600b756a77c6286764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ff77fc9990d4ec3b4743911153e76b90b647d4b9797422dd600b756a77c6286764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH24 0xFC9990D4EC3B4743911153E76B90B647D4B9797422DD600B PUSH22 0x6A77C6286764736F6C63430008000033000000000000 ",
							"sourceMap": "27:29:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ff77fc9990d4ec3b4743911153e76b90b647d4b9797422dd600b756a77c6286764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT PUSH24 0xFC9990D4EC3B4743911153E76B90B647D4B9797422DD600B PUSH22 0x6A77C6286764736F6C63430008000033000000000000 ",
							"sourceMap": "27:29:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 56,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 56,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff77fc9990d4ec3b4743911153e76b90b647d4b9797422dd600b756a77c6286764736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 56,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 56,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 56,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 56,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sendEther.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sendEther.sol\":{\"keccak256\":\"0xeee5342038cb5d008498d2f30d7091aa85406f7d03c44373ac13202d7707e92b\",\"urls\":[\"bzz-raw://fcfa90e6e921eef848e1696a1ea6b313a529d1167d74bb780a5853e180246bdc\",\"dweb:/ipfs/QmQQSFeLjcTJAG4ydTC7aiEA8mTAjTCncKUT8KvzUKU8eu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> sendEther.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "sendEther.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"sendEther.sol": {
				"ast": {
					"absolutePath": "sendEther.sol",
					"exportedSymbols": {
						"structure": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:29:0"
						}
					],
					"src": "0:58:0"
				},
				"id": 0
			}
		}
	}
}