{
	"id": "098719dbb300ab48d2f6c8b85942444f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"enum.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n\r\ncontract structure {\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"enum.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"enum.sol\":29:54  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"enum.sol\":29:54  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c246c740b5cb2523c519738d1307a6eb12de05ab44d67e876db1332ca26c3e0f64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c246c740b5cb2523c519738d1307a6eb12de05ab44d67e876db1332ca26c3e0f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CHAINID 0xC7 BLOCKHASH 0xB5 0xCB 0x25 0x23 0xC5 NOT PUSH20 0x8D1307A6EB12DE05AB44D67E876DB1332CA26C3E 0xF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "29:25:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220c246c740b5cb2523c519738d1307a6eb12de05ab44d67e876db1332ca26c3e0f64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 CHAINID 0xC7 BLOCKHASH 0xB5 0xCB 0x25 0x23 0xC5 NOT PUSH20 0x8D1307A6EB12DE05AB44D67E876DB1332CA26C3E 0xF PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "29:25:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c246c740b5cb2523c519738d1307a6eb12de05ab44d67e876db1332ca26c3e0f64736f6c63430008000033",
									".code": [
										{
											"begin": 29,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"enum.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"enum.sol\":{\"keccak256\":\"0x9fcb56cd4765d7070de22fa8d4428c0382bc1bf944c3bf144239256de9032051\",\"urls\":[\"bzz-raw://dddf42bbde3ec3e1ec1ec5bf3c97072b8f1cd1f5acd5d1aa78faea7e65610422\",\"dweb:/ipfs/QmXiSRFLbsu6C8Yqy9UQUjvUFTYSJd89WF8jXPnfy86Ppm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"enum.sol": {
				"ast": {
					"absolutePath": "enum.sol",
					"exportedSymbols": {
						"structure": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "29:25:0"
						}
					],
					"src": "0:56:0"
				},
				"id": 0
			}
		}
	}
}