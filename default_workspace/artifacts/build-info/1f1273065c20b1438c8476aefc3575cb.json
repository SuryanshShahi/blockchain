{
	"id": "1f1273065c20b1438c8476aefc3575cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"enum.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nstruct student{\r\n    uint roll;\r\n    string name;\r\n}\r\n\r\ncontract structure {\r\n \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"enum.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"enum.sol\":83:109  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"enum.sol\":83:109  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122047fbe0f719ed6765b273f10c55e5a19c4acbbf78b5fb51942ded643a16fce6ed64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122047fbe0f719ed6765b273f10c55e5a19c4acbbf78b5fb51942ded643a16fce6ed64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xFB 0xE0 0xF7 NOT 0xED PUSH8 0x65B273F10C55E5A1 SWAP13 0x4A 0xCB 0xBF PUSH25 0xB5FB51942DED643A16FCE6ED64736F6C634300080000330000 ",
							"sourceMap": "83:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122047fbe0f719ed6765b273f10c55e5a19c4acbbf78b5fb51942ded643a16fce6ed64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE 0xFB 0xE0 0xF7 NOT 0xED PUSH8 0x65B273F10C55E5A1 SWAP13 0x4A 0xCB 0xBF PUSH25 0xB5FB51942DED643A16FCE6ED64736F6C634300080000330000 ",
							"sourceMap": "83:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 83,
									"end": 109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 83,
									"end": 109,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122047fbe0f719ed6765b273f10c55e5a19c4acbbf78b5fb51942ded643a16fce6ed64736f6c63430008000033",
									".code": [
										{
											"begin": 83,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 83,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 83,
											"end": 109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 83,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 83,
											"end": 109,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"enum.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"enum.sol\":{\"keccak256\":\"0x8b5a658b981bfea5d3d9cfd4b6d47efd874049d875e7449a291a28e771688df5\",\"urls\":[\"bzz-raw://9d4bb0a4024d446bcf4d2b54aeadbb4ccbf30ce18a336e122cd8c546f4f3fb3d\",\"dweb:/ipfs/QmcuLmuafVi2hv44sAamgEsM6htpCqKE3K4P9vL7MNiAM1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"enum.sol": {
				"ast": {
					"absolutePath": "enum.sol",
					"exportedSymbols": {
						"structure": [
							7
						],
						"student": [
							6
						]
					},
					"id": 8,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"canonicalName": "student",
							"id": 6,
							"members": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "roll",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "48:9:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "48:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 6,
									"src": "64:11:0",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 4,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "64:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "student",
							"nodeType": "StructDefinition",
							"scope": 8,
							"src": "27:52:0",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 7,
							"linearizedBaseContracts": [
								7
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 8,
							"src": "83:26:0"
						}
					],
					"src": "0:111:0"
				},
				"id": 0
			}
		}
	}
}