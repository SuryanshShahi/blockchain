{
	"id": "65968aad1eb7a58d8f9536e9604b1f23",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"constructor.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract cons{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"constructor.sol": {
				"cons": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"constructor.sol\":27:50  contract cons{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"constructor.sol\":27:50  contract cons{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203ff5c991aefae0eba41505cbcdc823386c6e1ccf4b1ee05b9e4c40abf6c1d35c64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203ff5c991aefae0eba41505cbcdc823386c6e1ccf4b1ee05b9e4c40abf6c1d35c64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CREATE2 0xC9 SWAP2 0xAE STATICCALL 0xE0 0xEB LOG4 ISZERO SDIV 0xCB 0xCD 0xC8 0x23 CODESIZE PUSH13 0x6E1CCF4B1EE05B9E4C40ABF6C1 0xD3 0x5C PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "27:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203ff5c991aefae0eba41505cbcdc823386c6e1ccf4b1ee05b9e4c40abf6c1d35c64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH CREATE2 0xC9 SWAP2 0xAE STATICCALL 0xE0 0xEB LOG4 ISZERO SDIV 0xCB 0xCD 0xC8 0x23 CODESIZE PUSH13 0x6E1CCF4B1EE05B9E4C40ABF6C1 0xD3 0x5C PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "27:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ff5c991aefae0eba41505cbcdc823386c6e1ccf4b1ee05b9e4c40abf6c1d35c64736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"constructor.sol\":\"cons\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"constructor.sol\":{\"keccak256\":\"0x4f6989fa4cac74906d413f9e3938a24b50358ce9964069e6aa98912e9ab674a4\",\"urls\":[\"bzz-raw://1dbb0343583fd059ab51089c774af3f453734045e183515a64113fd7a3539e1e\",\"dweb:/ipfs/QmeFxBurr4xxAam5RhTpa1NUkTkoRwGuVzUSYtQLpAp7sx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> constructor.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"constructor.sol": {
				"ast": {
					"absolutePath": "constructor.sol",
					"exportedSymbols": {
						"cons": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "cons",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:23:0"
						}
					],
					"src": "0:50:0"
				},
				"id": 0
			}
		}
	}
}