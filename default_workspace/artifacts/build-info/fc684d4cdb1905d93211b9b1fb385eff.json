{
	"id": "fc684d4cdb1905d93211b9b1fb385eff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"enum.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n\r\ncontract structure {\r\n    enum user{allowed,not_allowed}\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"enum.sol": {
				"structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"enum.sol\":29:88  contract structure {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"enum.sol\":29:88  contract structure {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ba62759faf23eae5d8b0145c62e2ee1af9faecded6d1407726b69f4af117299464736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ba62759faf23eae5d8b0145c62e2ee1af9faecded6d1407726b69f4af117299464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH3 0x759FAF 0x23 0xEA 0xE5 0xD8 0xB0 EQ 0x5C PUSH3 0xE2EE1A 0xF9 STATICCALL 0xEC 0xDE 0xD6 0xD1 BLOCKHASH PUSH24 0x26B69F4AF117299464736F6C634300080000330000000000 ",
							"sourceMap": "29:59:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220ba62759faf23eae5d8b0145c62e2ee1af9faecded6d1407726b69f4af117299464736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH3 0x759FAF 0x23 0xEA 0xE5 0xD8 0xB0 EQ 0x5C PUSH3 0xE2EE1A 0xF9 STATICCALL 0xEC 0xDE 0xD6 0xD1 BLOCKHASH PUSH24 0x26B69F4AF117299464736F6C634300080000330000000000 ",
							"sourceMap": "29:59:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 29,
									"end": 88,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29,
									"end": 88,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba62759faf23eae5d8b0145c62e2ee1af9faecded6d1407726b69f4af117299464736f6c63430008000033",
									".code": [
										{
											"begin": 29,
											"end": 88,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 29,
											"end": 88,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29,
											"end": 88,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29,
											"end": 88,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 88,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29,
											"end": 88,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"enum.sol\":\"structure\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"enum.sol\":{\"keccak256\":\"0x74f09b239179b0c281f7df2cb77229c894b892d34c8be52d48d59a1976a9a050\",\"urls\":[\"bzz-raw://8d12182a72f1a11ad96bc04d47eb47dbd17444d4ae8a5301e6942da2511e94a4\",\"dweb:/ipfs/QmcoyX8FAeW3Dqd9zvwz3EtZjkTUMEHTZFiWPZ7foH1XBj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> enum.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "enum.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"enum.sol": {
				"ast": {
					"absolutePath": "enum.sol",
					"exportedSymbols": {
						"structure": [
							5
						]
					},
					"id": 6,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "structure",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structure.user",
									"id": 4,
									"members": [
										{
											"id": 2,
											"name": "allowed",
											"nodeType": "EnumValue",
											"src": "65:7:0"
										},
										{
											"id": 3,
											"name": "not_allowed",
											"nodeType": "EnumValue",
											"src": "73:11:0"
										}
									],
									"name": "user",
									"nodeType": "EnumDefinition",
									"src": "55:30:0"
								}
							],
							"scope": 6,
							"src": "29:59:0"
						}
					],
					"src": "0:90:0"
				},
				"id": 0
			}
		}
	}
}