{
	"id": "e5fd14b61fedace30366fd51e37c6622",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"sendEther.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract pay {\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sendEther.sol": {
				"pay": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sendEther.sol\":27:50  contract pay {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sendEther.sol\":27:50  contract pay {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bf205ce7ae0bebda0842d5ec4a6bfeb9bf5e0f9d2252523073e2f31e654d07b664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bf205ce7ae0bebda0842d5ec4a6bfeb9bf5e0f9d2252523073e2f31e654d07b664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF KECCAK256 0x5C 0xE7 0xAE SIGNEXTEND 0xEB 0xDA ADDMOD TIMESTAMP 0xD5 0xEC 0x4A PUSH12 0xFEB9BF5E0F9D2252523073E2 RETURN 0x1E PUSH6 0x4D07B664736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "27:23:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bf205ce7ae0bebda0842d5ec4a6bfeb9bf5e0f9d2252523073e2f31e654d07b664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF KECCAK256 0x5C 0xE7 0xAE SIGNEXTEND 0xEB 0xDA ADDMOD TIMESTAMP 0xD5 0xEC 0x4A PUSH12 0xFEB9BF5E0F9D2252523073E2 RETURN 0x1E PUSH6 0x4D07B664736F PUSH13 0x63430008000033000000000000 ",
							"sourceMap": "27:23:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 50,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 50,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf205ce7ae0bebda0842d5ec4a6bfeb9bf5e0f9d2252523073e2f31e654d07b664736f6c63430008000033",
									".code": [
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 50,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 50,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sendEther.sol\":\"pay\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sendEther.sol\":{\"keccak256\":\"0xa2195134a297b5e85e66f41a3d0ba757504aa42268665cffa318e7d8af23f72c\",\"urls\":[\"bzz-raw://342753894fa5055da06c73c906d9529441052afc42c6f815a594240781bb3dfc\",\"dweb:/ipfs/QmdQE4nT9o5ctSgLcRnYRAZuAk9DqD43VLJZSeE9M9XNwD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> sendEther.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "sendEther.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"sendEther.sol": {
				"ast": {
					"absolutePath": "sendEther.sol",
					"exportedSymbols": {
						"pay": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "pay",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:23:0"
						}
					],
					"src": "0:52:0"
				},
				"id": 0
			}
		}
	}
}